datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Usuario {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  password   String
  rol        Rol? // Rol opcional
  inversores Inversor[]
  startups   Startup[]
}

model Inversor {
  id               Int         @id @default(autoincrement())
  id_usuario       Int
  nombre           String      @db.VarChar(255)
  username         String      @unique @db.VarChar(255)
  perfil_inversion String
  inversiones      Inversion[]
  usuario          Usuario     @relation(fields: [id_usuario], references: [id])
  portfolio        Portfolio?  
  ofertas          Oferta[]
}



model Startup {
  id                    Int         @id @default(autoincrement())
  id_usuario            Int // Clave foránea que hace referencia a Usuario
  nombre                String      @db.VarChar(255)
  username              String      @unique @db.VarChar(255)
  sector                String      @db.VarChar(255)
  estado_financiacion   String      @db.VarChar(255)
  plantilla             Int?
  porcentaje_disponible Decimal     @default(100) @db.Decimal(5, 2)
  inversiones           Inversion[] // Relación uno a muchos con inversiones recibidas
  ofertas               Oferta[] // Relación uno a muchos con ofertas
  usuario               Usuario     @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Inversion {
  id                   Int        @id @default(autoincrement())
  id_inversor          Int // Clave foránea que hace referencia a Inversor
  id_startup           Int // Clave foránea que hace referencia a Startup
  monto_invertido      Decimal    @db.Decimal(12, 2)
  porcentaje_adquirido Decimal    @db.Decimal(5, 2)
  fecha                DateTime   @default(now()) @db.Timestamp(6)
  inversor             Inversor   @relation(fields: [id_inversor], references: [id], onDelete: NoAction, onUpdate: NoAction)
  startup              Startup    @relation(fields: [id_startup], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Portfolio            Portfolio? @relation(fields: [portfolioId], references: [id])
  portfolioId          Int?
}

model Oferta {
  id                      Int       @id @default(autoincrement())
  id_inversor             Int // Clave foránea que hace referencia a Inversor
  id_startup              Int // Clave foránea que hace referencia a Startup
  monto_ofrecido          Decimal   @db.Decimal(12, 2)
  porcentaje_ofrecido     Decimal   @db.Decimal(5, 2)
  estado                  String    @db.VarChar(50)
  escrow_id               Int?
  contraoferta_monto      Decimal?  @db.Decimal(12, 2)
  contraoferta_porcentaje Decimal?  @db.Decimal(5, 2)
  fecha_creacion          DateTime? @default(now()) @db.Timestamp(6)
  inversor                Inversor  @relation(fields: [id_inversor], references: [id], onDelete: NoAction, onUpdate: NoAction)
  startup                 Startup   @relation(fields: [id_startup], references: [id], onDelete: NoAction, onUpdate: NoAction)
  escrow                  Escrow[]
}

model Portfolio {
  id             Int      @id @default(autoincrement())
  id_inversor    Int      @unique
  inversor       Inversor @relation(fields: [id_inversor], references: [id]) // Solo este modelo tendrá la clave foránea
  fecha_creacion DateTime @default(now())
  inversiones    Inversion[]
}


model Escrow {
  id             Int      @id @default(autoincrement())
  id_oferta      Int // Clave foránea que hace referencia a Oferta
  monto          Decimal  @db.Decimal(12, 2)
  estado         String   @db.VarChar(50)
  fecha_creacion DateTime @default(now()) @db.Timestamp(6)
  oferta         Oferta   @relation(fields: [id_oferta], references: [id], onDelete: Cascade)
}

enum Rol {
  inversor
  startup
}
